version: '3.8'

services:
  # FastAPI application
  app:
    build:
      context: .
      dockerfile: Dockerfile-updated
    ports:
      - "8000:8000"
    depends_on:
      - db
      - prefect
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ml_monitoring
      - POSTGRES_PORT=5432
      - USE_SQLITE=False
    volumes:
      - ./data:/app/data
      - ./app/templates/reports:/app/app/templates/reports
      - prefect_data:/app/.prefect
    networks:
      - monitoring-network

  # PostgreSQL database
  db:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ml_monitoring
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - monitoring-network

  # Prefect server - downgraded to be compatible with prefect 3.3.1
  prefect:
    image: prefecthq/prefect:2.11.5-python3.9
    ports:
      - "4200:4200"
    command: ["prefect", "server", "start", "--host", "0.0.0.0"]
    environment:
      - PREFECT_UI_URL=http://0.0.0.0:4200
      - PREFECT_API_URL=http://0.0.0.0:4200/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
    volumes:
      - prefect_data:/root/.prefect
    networks:
      - monitoring-network

  # Grafana
  grafana:
    image: grafana/grafana:10.2.3
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - db
    networks:
      - monitoring-network

volumes:
  postgres_data:
  prefect_data:
  grafana_data:

networks:
  monitoring-network:
    driver: bridge